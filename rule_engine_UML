= Rule Engine Cpp

*class RulesTree:* This is the class that includes the decision tree, it is composed of the rules and the rules engine. It ensures the verification of the existence, the availability, the registration and the deletion of a rule.

*class Rule:* It is the class that ensures the specification and creation of a rule in name, description and priority. It is composed of actions, a condition, and facts.

*RulesEngine class:* It is the rules engine class that allows to launch and apply rules according to the facts. The application of the rules is launched after checks and validations on the availability of engines and the evaluation of the conditions of the rules. This engine is implemented by the InferenceRulesEngine class.

*BasicRule class:* It is the class that designates the basic rule or the first rule. It is an extension of the Rule class.

*class DefaultRule:* This is the class that describes the default rule. It is the rule to apply in case no defined rule is checked by its condition. This is a Rule class extension.

*class Action*: This is the class that defines the lists of actions that the engine must execute when checking the rule condition.

class Condition: This is the class that defines the verification condition of a rule.

*class Facts:* This is the class that defines the facts that are used to run the rule engine and launch the expert system.

*class RuleBuilder:* This is the class that builds the rule so that it is ready to be registered in the knowledge base.
It is an extension of the Rule class.

*class RulesListener: *This is the class that allows you to observe the different stages of rule initiation, where there is rule condition checking and successful execution.

*class RulesEngineListener:* It is the class that allows to control the availability of the engine and the end of the execution.

*class InferenceRulesEngine:* This is the class that implements the engine while ensuring that Rules are selected based on given facts and drawn in their order and that the engine selects and triggers them continuously.






http://www.plantuml.com/plantuml/svg/fLNTRjiy3BtNKn3uRbp0xGDyA8h-D0K6x6hT2wWsdGfm94EIknPTtdsMPJDqGc_8vWi38Gzvo4E6lWrH-zZlMcNr3aEdAuIxpi1_Z-C3dqfLhGu1llKjXkyUSJ01V3O6steFz2JR3kEhg_U4B2uKqFFYN8lQWWcRTnDYSG6oSzV5ZqMWiH4yReSOZqNA3NvuBSBVdAcX6Z9u1b3xkVIxAXfd5tKFoOpTWXuzBDFNWUOwusycRs2jPG-LHzpuZbKViNWQGW8qwPtuC_s3ixLPgw2QdOo50aG1yKstlLuZoqQ1AE4OnuWxRQJhO_6S0z8-b0SE3YMsKMrEnc8PVhBMM7dJJStoyNRUE6_Yn-ew5QVZlkzDMn_6NJAPITDI7kX5Re4lziPkZLsqmYeO-HephLyO-K89eluZ8f6YHR-IRvxa2pREusQQ9-z5bdsEqqr4__km8CLDV7bNr-DaFWgJ9H03dNtkgmf3E8FCsITjsjwl5xW_7Tm_2dw-0d9TeyTTNkPzev-qcMGPunGTocJYxGWUfLJE2bTNDv3ZAI-pgUK2NlzSPYQ7KimACuZS_yCr33APMezr3xsnxyE3yyW_4DCyxdKmLKeZ3u7SYwj3Ldvs_WWe3oSbp3VbhuBAnVt9AMZ17h7HVHlNMoB0kKJojPAF5RN5ZzONsw17Mo6ReboZX2oEal9JEDvLz3mPvMB-b8BVuzIuD4FoCoqASNWSJK8LNBLZq8zNj8KWv34k9fmiRch-hZDNgRFyPs4pNNhoKWbsfWgGAokT4UAqG0tSjsZhVjV-0W00